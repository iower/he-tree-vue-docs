(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{482:function(e,t,a){"use strict";a.r(t);var r=a(56),s=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api"}},[e._v("#")]),e._v(" API")]),e._v(" "),a("h2",{attrs:{id:"base-tree"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#base-tree"}},[e._v("#")]),e._v(" Base Tree")]),e._v(" "),a("h2",{attrs:{id:"props"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#props"}},[e._v("#")]),e._v(" props")]),e._v(" "),a("h3",{attrs:{id:"value"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#value"}},[e._v("#")]),e._v(" value")]),e._v(" "),a("ul",[a("li",[e._v("Type: "),a("a",{attrs:{href:"#treedata-2"}},[e._v("TreeData")]),e._v(", required")]),e._v(" "),a("li",[e._v("Detail: The data passed to tree.")]),e._v(" "),a("li",[e._v("Example: "),a("code",[e._v("[{text: 'node 1'}, {text: 'node 2', children: [{text: 'node 2-1'}]}]")])])]),e._v(" "),a("h3",{attrs:{id:"indent"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#indent"}},[e._v("#")]),e._v(" indent")]),e._v(" "),a("ul",[a("li",[e._v("Type: Number, default: 20")]),e._v(" "),a("li",[e._v("Detail: Indentation, unit is "),a("code",[e._v("px")]),e._v(".")])]),e._v(" "),a("h3",{attrs:{id:"rtl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rtl"}},[e._v("#")]),e._v(" rtl")]),e._v(" "),a("ul",[a("li",[e._v("Type: boolean")]),e._v(" "),a("li",[e._v("Detail: Support right to left display and drag.")])]),e._v(" "),a("h3",{attrs:{id:"rootnode"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rootnode"}},[e._v("#")]),e._v(" rootNode")]),e._v(" "),a("ul",[a("li",[e._v("Type: "),a("a",{attrs:{href:"#node"}},[e._v("Node")]),e._v(", default: {}")]),e._v(" "),a("li",[e._v("Detail: The virtual root node of the tree. You can add options to root node by it.")])]),e._v(" "),a("h2",{attrs:{id:"data"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#data"}},[e._v("#")]),e._v(" data")]),e._v(" "),a("h3",{attrs:{id:"trees"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#trees"}},[e._v("#")]),e._v(" trees")]),e._v(" "),a("ul",[a("li",[e._v("Type: {tree._uid: tree}")]),e._v(" "),a("li",[e._v("Detail: All the tree's vm instance that currently exist.")])]),e._v(" "),a("h3",{attrs:{id:"treeclass"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#treeclass"}},[e._v("#")]),e._v(" treeClass")]),e._v(" "),a("ul",[a("li",[e._v("Type: String")]),e._v(" "),a("li",[e._v("Detail: Add class name to the top level of the tree. When using extends or mixins, you can customize the top level class without changing the template.")])]),e._v(" "),a("h3",{attrs:{id:"treeid"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#treeid"}},[e._v("#")]),e._v(" treeId")]),e._v(" "),a("ul",[a("li",[e._v("Type: String")]),e._v(" "),a("li",[e._v("Detail: Random string. Available after mounted.")])]),e._v(" "),a("h2",{attrs:{id:"computed"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#computed"}},[e._v("#")]),e._v(" computed")]),e._v(" "),a("h3",{attrs:{id:"treedata"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#treedata"}},[e._v("#")]),e._v(" treeData")]),e._v(" "),a("ul",[a("li",[e._v("Detail: Alias of "),a("a",{attrs:{href:"#value"}},[e._v("value")]),e._v(".")])]),e._v(" "),a("h2",{attrs:{id:"methods"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#methods"}},[e._v("#")]),e._v(" methods")]),e._v(" "),a("h3",{attrs:{id:"iteratepath"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#iteratepath"}},[e._v("#")]),e._v(" iteratePath")]),e._v(" "),a("ul",[a("li",[e._v("Type: (path: "),a("a",{attrs:{href:"#path"}},[e._v("Path")]),e._v(", [options: Object]) => Generator\n"),a("ul",[a("li",[e._v("options:\n"),a("ul",[a("li",[e._v("{Boolean} reverse")])])])])]),e._v(" "),a("li",[e._v("Detail: Iterate path.")]),e._v(" "),a("li",[e._v("Example:"),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("for")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("const")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("of")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("iteratePath")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("reverse"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("//")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])])])]),e._v(" "),a("h3",{attrs:{id:"gettreevmbytreeel"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gettreevmbytreeel"}},[e._v("#")]),e._v(" getTreeVmByTreeEl")]),e._v(" "),a("ul",[a("li",[e._v("Type: (treeEl: HTMLElement) => "),a("a",{attrs:{href:"#tree"}},[e._v("Tree")])]),e._v(" "),a("li",[e._v("Detail: Get vm by tree element.")])]),e._v(" "),a("h3",{attrs:{id:"getallnodesbypath"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getallnodesbypath"}},[e._v("#")]),e._v(" getAllNodesByPath")]),e._v(" "),a("ul",[a("li",[e._v("Type: (path: "),a("a",{attrs:{href:"#path"}},[e._v("Path")]),e._v(") => "),a("a",{attrs:{href:"#node"}},[e._v("Node[]")])])]),e._v(" "),a("h3",{attrs:{id:"getnodebypath"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getnodebypath"}},[e._v("#")]),e._v(" getNodeByPath")]),e._v(" "),a("ul",[a("li",[e._v("Type: (path: "),a("a",{attrs:{href:"#path"}},[e._v("Path")]),e._v(") => "),a("a",{attrs:{href:"#node"}},[e._v("Node")])])]),e._v(" "),a("h3",{attrs:{id:"getpathbybranchel"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getpathbybranchel"}},[e._v("#")]),e._v(" getPathByBranchEl")]),e._v(" "),a("ul",[a("li",[e._v("Type: ("),a("a",{attrs:{href:"#tree-branch"}},[e._v("branchEl")]),e._v(": HTMLElement) => "),a("a",{attrs:{href:"#path"}},[e._v("Path")])])]),e._v(" "),a("h3",{attrs:{id:"getbranchelbypath"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getbranchelbypath"}},[e._v("#")]),e._v(" getBranchElByPath")]),e._v(" "),a("ul",[a("li",[e._v("Type: (path: "),a("a",{attrs:{href:"#path"}},[e._v("Path")]),e._v(") => "),a("a",{attrs:{href:"#tree-branch"}},[e._v("branchEl")])])]),e._v(" "),a("h3",{attrs:{id:"getnodebybranchel"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getnodebybranchel"}},[e._v("#")]),e._v(" getNodeByBranchEl")]),e._v(" "),a("ul",[a("li",[e._v("Type: ("),a("a",{attrs:{href:"#tree-branch"}},[e._v("branchEl")]),e._v(": HTMLElement) => "),a("a",{attrs:{href:"#node"}},[e._v("Node")])])]),e._v(" "),a("h3",{attrs:{id:"getnodeparentbypath"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getnodeparentbypath"}},[e._v("#")]),e._v(" getNodeParentByPath")]),e._v(" "),a("ul",[a("li",[e._v("Type: (path: "),a("a",{attrs:{href:"#path"}},[e._v("Path")]),e._v(") => "),a("a",{attrs:{href:"#node"}},[e._v("Node")])])]),e._v(" "),a("h3",{attrs:{id:"removenodebypath"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#removenodebypath"}},[e._v("#")]),e._v(" removeNodeByPath")]),e._v(" "),a("ul",[a("li",[e._v("Type: (path: "),a("a",{attrs:{href:"#path"}},[e._v("Path")]),e._v(")")])]),e._v(" "),a("h3",{attrs:{id:"walktreedata"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#walktreedata"}},[e._v("#")]),e._v(" walkTreeData")]),e._v(" "),a("ul",[a("li",[e._v("Type: (handler, options) => "),a("a",{attrs:{href:"#walktreedata-2"}},[e._v("ut.walkTreeData(this.treeData, handler, options)")])]),e._v(" "),a("li",[e._v("Detail: Same with util but first argument is bound to treeData of the Tree.")])]),e._v(" "),a("h3",{attrs:{id:"clonetreedata"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#clonetreedata"}},[e._v("#")]),e._v(" cloneTreeData")]),e._v(" "),a("ul",[a("li",[e._v("Type: (options) => "),a("a",{attrs:{href:"#clonetreedata-2"}},[e._v("ut.cloneTreeData(this.treeData, options)")])]),e._v(" "),a("li",[e._v("Detail: Same with util but first argument is bound to treeData of the Tree.")])]),e._v(" "),a("h3",{attrs:{id:"getpuretreedata"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getpuretreedata"}},[e._v("#")]),e._v(" getPureTreeData")]),e._v(" "),a("ul",[a("li",[e._v("Type: () => "),a("a",{attrs:{href:"#getpuretreedata-2"}},[e._v("ut.getPureTreeData(this.treeData)")])]),e._v(" "),a("li",[e._v("Detail: Same with util but first argument is bound to treeData of the Tree.")])]),e._v(" "),a("h2",{attrs:{id:"slots"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#slots"}},[e._v("#")]),e._v(" slots")]),e._v(" "),a("h3",{attrs:{id:"default-slot"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#default-slot"}},[e._v("#")]),e._v(" default slot")]),e._v(" "),a("ul",[a("li",[e._v("Type: scoped slot{node: "),a("a",{attrs:{href:"#node"}},[e._v("Node")]),e._v(", index: Number, path: "),a("a",{attrs:{href:"#path"}},[e._v("Path")]),e._v(", tree: "),a("a",{attrs:{href:"#tree"}},[e._v("Tree")]),e._v("}\n"),a("ul",[a("li",[e._v("index")])])]),e._v(" "),a("li",[e._v("Default:"),a("div",{pre:!0},[a("p",[a("code",[e._v("{{node.text}}")])])])]),e._v(" "),a("li",[e._v("Detail: Default slot, custom node render.")]),e._v(" "),a("li",[e._v("Example:")])]),e._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("<")]),e._v("div")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("v-slot")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')]),e._v("{node, index, path, tree}"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),e._v("{{node.title}}"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("</")]),e._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),e._v("\n")])])]),a("h2",{attrs:{id:"render-hooks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#render-hooks"}},[e._v("#")]),e._v(" render hooks")]),e._v(" "),a("p",[e._v("Custom render. Applicable when using extends or mixins. Suitable for definition in data or methods.")]),e._v(" "),a("h3",{attrs:{id:"overrideslotdefault"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#overrideslotdefault"}},[e._v("#")]),e._v(" overrideSlotDefault")]),e._v(" "),a("ul",[a("li",[e._v("Type: ({node: "),a("a",{attrs:{href:"#node"}},[e._v("Node")]),e._v(", index: Number, path: "),a("a",{attrs:{href:"#path"}},[e._v("Path")]),e._v(", tree: "),a("a",{attrs:{href:"#tree"}},[e._v("Tree")]),e._v("}, original) => "),a("a",{attrs:{href:"#jsx"}},[e._v("JSX")]),e._v(" "),a("ul",[a("li",[e._v("{Function} original: return default render")])])]),e._v(" "),a("li",[e._v("Detail: Oerride "),a("a",{attrs:{href:"#default-slot"}},[e._v("default slot")]),e._v(". Custom node render.")]),e._v(" "),a("li",[e._v("Example:\n"),a("ul",[a("li",[e._v("Add button in the head and tail."),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("overrideSlotDefault")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" tree"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" original")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("return")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("div"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("button"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("before"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v("button"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("original")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("button"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("after"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v("button"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v("div"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])])]),e._v(" "),a("li",[e._v("Custom display text."),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("overrideSlotDefault")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" tree"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" original")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("return")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("div"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("title"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v("div"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])])])])])]),e._v(" "),a("h3",{attrs:{id:"blockheader"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#blockheader"}},[e._v("#")]),e._v(" blockHeader")]),e._v(" "),a("ul",[a("li",[e._v("Type: () => "),a("a",{attrs:{href:"#jsx"}},[e._v("JSX")])]),e._v(" "),a("li",[e._v("Detail: Insert template to head.")])]),e._v(" "),a("h3",{attrs:{id:"blockfooter"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#blockfooter"}},[e._v("#")]),e._v(" blockFooter")]),e._v(" "),a("ul",[a("li",[e._v("Type: () => "),a("a",{attrs:{href:"#jsx"}},[e._v("JSX")])]),e._v(" "),a("li",[e._v("Detail: Insert template to end.")])]),e._v(" "),a("h2",{attrs:{id:"node-special-properties"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#node-special-properties"}},[e._v("#")]),e._v(" Node Special Properties")]),e._v(" "),a("p",[e._v("Special attributes of nodes in the base Tree.")]),e._v(" "),a("h3",{attrs:{id:"hidden"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hidden"}},[e._v("#")]),e._v(" $hidden")]),e._v(" "),a("ul",[a("li",[e._v("Type: Boolean")]),e._v(" "),a("li",[e._v("Detail: Hide node.")])]),e._v(" "),a("h3",{attrs:{id:"xxxclass"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#xxxclass"}},[e._v("#")]),e._v(" $xxxClass")]),e._v(" "),a("ul",[a("li",[e._v("Type: String")]),e._v(" "),a("li",[e._v("Detail: Define the class of the HTML element. All: $branchClass, $nodeBackClass, $nodeClass, $childrenClass.")])]),e._v(" "),a("h3",{attrs:{id:"xxxstyle"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#xxxstyle"}},[e._v("#")]),e._v(" $xxxStyle")]),e._v(" "),a("ul",[a("li",[e._v("Type: [Object, String]")]),e._v(" "),a("li",[e._v("Detail: Define the style of the HTML element. All: $branchStyle, $nodeBackStyle, $nodeStyle, $childrenStyle.")])]),e._v(" "),a("h2",{attrs:{id:"static-methods"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#static-methods"}},[e._v("#")]),e._v(" Static Methods")]),e._v(" "),a("h3",{attrs:{id:"mixplugins"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mixplugins"}},[e._v("#")]),e._v(" mixPlugins")]),e._v(" "),a("ul",[a("li",[e._v("Type: (plugins: Plugin[]) => VueComponent")]),e._v(" "),a("li",[e._v("Detail: Mix the base tree with the given plugin, returning new component.")])]),e._v(" "),a("h2",{attrs:{id:"fold-plugin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fold-plugin"}},[e._v("#")]),e._v(" Fold Plugin")]),e._v(" "),a("h2",{attrs:{id:"props-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#props-2"}},[e._v("#")]),e._v(" props")]),e._v(" "),a("h3",{attrs:{id:"foldingtransitionname"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#foldingtransitionname"}},[e._v("#")]),e._v(" foldingTransitionName")]),e._v(" "),a("ul",[a("li",[e._v("Type: String")]),e._v(" "),a("li",[e._v("Detail: The transition name.")])]),e._v(" "),a("h3",{attrs:{id:"foldingtransition"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#foldingtransition"}},[e._v("#")]),e._v(" foldingTransition")]),e._v(" "),a("ul",[a("li",[e._v("Type: Vue")]),e._v(" "),a("li",[e._v("Detail: The transition component.")])]),e._v(" "),a("h3",{attrs:{id:"foldallaftermounted"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#foldallaftermounted"}},[e._v("#")]),e._v(" foldAllAfterMounted")]),e._v(" "),a("ul",[a("li",[e._v("Type: Boolean")]),e._v(" "),a("li",[e._v("Detail: Fold all nodes after mounted.")])]),e._v(" "),a("h2",{attrs:{id:"node-special-properties-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#node-special-properties-2"}},[e._v("#")]),e._v(" Node Special Properties")]),e._v(" "),a("p",[e._v("Special properties of nodes in this plugin.")]),e._v(" "),a("h3",{attrs:{id:"folded"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#folded"}},[e._v("#")]),e._v(" $folded")]),e._v(" "),a("ul",[a("li",[e._v("Type: Boolean")]),e._v(" "),a("li",[e._v("Detail: Whether the node is folded.")])]),e._v(" "),a("h2",{attrs:{id:"methods-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#methods-2"}},[e._v("#")]),e._v(" methods")]),e._v(" "),a("h3",{attrs:{id:"fold"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fold"}},[e._v("#")]),e._v(" fold")]),e._v(" "),a("ul",[a("li",[e._v("Type: (node: "),a("a",{attrs:{href:"#node"}},[e._v("Node")]),e._v(", path: "),a("a",{attrs:{href:"#path"}},[e._v("Path")]),e._v(")")]),e._v(" "),a("li",[e._v("Detail: Fold node.")])]),e._v(" "),a("h3",{attrs:{id:"unfold"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#unfold"}},[e._v("#")]),e._v(" unfold")]),e._v(" "),a("ul",[a("li",[e._v("Type: (node: "),a("a",{attrs:{href:"#node"}},[e._v("Node")]),e._v(", path: "),a("a",{attrs:{href:"#path"}},[e._v("Path")]),e._v(", [options: Object])\n"),a("ul",[a("li",[e._v("options:\n"),a("ul",[a("li",[e._v("foldOthers: false, Fold nodes in other branchs.")])])])])]),e._v(" "),a("li",[e._v("Detail: Unfold node.")])]),e._v(" "),a("h3",{attrs:{id:"togglefold"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#togglefold"}},[e._v("#")]),e._v(" toggleFold")]),e._v(" "),a("ul",[a("li",[e._v("Type: (node: "),a("a",{attrs:{href:"#node"}},[e._v("Node")]),e._v(", path: "),a("a",{attrs:{href:"#path"}},[e._v("Path")]),e._v(", [options: Object])\n"),a("ul",[a("li",[e._v("options: Passed to fold or unfold.")])])]),e._v(" "),a("li",[e._v("Detail: Toggle status.")])]),e._v(" "),a("h3",{attrs:{id:"foldall"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#foldall"}},[e._v("#")]),e._v(" foldAll")]),e._v(" "),a("ul",[a("li",[e._v("Type: () => undefined")])]),e._v(" "),a("h3",{attrs:{id:"unfoldall"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#unfoldall"}},[e._v("#")]),e._v(" unfoldAll")]),e._v(" "),a("ul",[a("li",[e._v("Type: () => undefined")])]),e._v(" "),a("h2",{attrs:{id:"events"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#events"}},[e._v("#")]),e._v(" events")]),e._v(" "),a("h3",{attrs:{id:"node-folded-changed"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#node-folded-changed"}},[e._v("#")]),e._v(" node-folded-changed")]),e._v(" "),a("ul",[a("li",[e._v("Type: (node: "),a("a",{attrs:{href:"#node"}},[e._v("Node")]),e._v(")")]),e._v(" "),a("li",[e._v("Detail: Triggered when node is folded or unfolded.")])]),e._v(" "),a("h3",{attrs:{id:"nodefoldedchanged"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nodefoldedchanged"}},[e._v("#")]),e._v(" nodeFoldedChanged")]),e._v(" "),a("ul",[a("li",[e._v("Type: (node: "),a("a",{attrs:{href:"#node"}},[e._v("Node")]),e._v(")")]),e._v(" "),a("li",[e._v("Detail: Alias of "),a("code",[e._v("node-folded-changed")]),e._v(". Will be deprecated.")])]),e._v(" "),a("h2",{attrs:{id:"check-plugin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#check-plugin"}},[e._v("#")]),e._v(" Check Plugin")]),e._v(" "),a("h2",{attrs:{id:"methods-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#methods-3"}},[e._v("#")]),e._v(" methods")]),e._v(" "),a("h3",{attrs:{id:"check"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#check"}},[e._v("#")]),e._v(" check")]),e._v(" "),a("ul",[a("li",[e._v("Type: (node: "),a("a",{attrs:{href:"#node"}},[e._v("Node")]),e._v(", path: "),a("a",{attrs:{href:"#path"}},[e._v("Path")]),e._v(")")])]),e._v(" "),a("h3",{attrs:{id:"uncheck"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#uncheck"}},[e._v("#")]),e._v(" uncheck")]),e._v(" "),a("ul",[a("li",[e._v("Type: (node: "),a("a",{attrs:{href:"#node"}},[e._v("Node")]),e._v(", path: "),a("a",{attrs:{href:"#path"}},[e._v("Path")]),e._v(")")])]),e._v(" "),a("h3",{attrs:{id:"togglecheck"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#togglecheck"}},[e._v("#")]),e._v(" toggleCheck")]),e._v(" "),a("ul",[a("li",[e._v("Type: (node: "),a("a",{attrs:{href:"#node"}},[e._v("Node")]),e._v(", path: "),a("a",{attrs:{href:"#path"}},[e._v("Path")]),e._v(")")])]),e._v(" "),a("h2",{attrs:{id:"draggable-plugin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#draggable-plugin"}},[e._v("#")]),e._v(" Draggable Plugin")]),e._v(" "),a("h2",{attrs:{id:"props-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#props-3"}},[e._v("#")]),e._v(" props")]),e._v(" "),a("h3",{attrs:{id:"triggerclass"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#triggerclass"}},[e._v("#")]),e._v(" triggerClass")]),e._v(" "),a("ul",[a("li",[e._v("Type: String, default: 'tree-node'")]),e._v(" "),a("li",[e._v("Detail: "),a("code",[e._v("class")]),e._v(" of the element which trigger drag.")])]),e._v(" "),a("h3",{attrs:{id:"triggerbyself"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#triggerbyself"}},[e._v("#")]),e._v(" triggerBySelf")]),e._v(" "),a("ul",[a("li",[e._v("Type: Boolean, default: false")]),e._v(" "),a("li",[e._v("Detail: Prevent child elements from triggering drag.")])]),e._v(" "),a("h3",{attrs:{id:"draggable"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#draggable"}},[e._v("#")]),e._v(" draggable")]),e._v(" "),a("ul",[a("li",[e._v("Type: [Boolean, (tree: "),a("a",{attrs:{href:"#tree"}},[e._v("Tree")]),e._v(", store: "),a("a",{attrs:{href:"#store"}},[e._v("Store")]),e._v(") => "),a("a",{attrs:{href:"#isdraggable"}},[e._v("IsDraggable")]),e._v("], default: true")]),e._v(" "),a("li",[e._v("Detail: Enable drag.")])]),e._v(" "),a("h3",{attrs:{id:"droppable"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#droppable"}},[e._v("#")]),e._v(" droppable")]),e._v(" "),a("ul",[a("li",[e._v("Type: [Boolean, (tree: "),a("a",{attrs:{href:"#tree"}},[e._v("Tree")]),e._v(", store: "),a("a",{attrs:{href:"#store"}},[e._v("Store")]),e._v(") => "),a("a",{attrs:{href:"#isdroppable"}},[e._v("IsDroppable")]),e._v("], default: true")]),e._v(" "),a("li",[e._v("Detail: Enable drop.")])]),e._v(" "),a("h3",{attrs:{id:"eachdraggable"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#eachdraggable"}},[e._v("#")]),e._v(" eachDraggable")]),e._v(" "),a("ul",[a("li",[e._v("Type: [undefined, Boolean, Function]\n"),a("ul",[a("li",[e._v("undefined: Inherit parent")]),e._v(" "),a("li",[e._v("Function: (currentPath: "),a("a",{attrs:{href:"#path"}},[e._v("Path")]),e._v(", tree: "),a("a",{attrs:{href:"#tree"}},[e._v("Tree")]),e._v(", store: "),a("a",{attrs:{href:"#store"}},[e._v("Store")]),e._v(") => "),a("a",{attrs:{href:"#isdraggable"}},[e._v("IsDraggable")])])])]),e._v(" "),a("li",[e._v("Detail: Whether a single node is draggable.")])]),e._v(" "),a("h3",{attrs:{id:"eachdroppable"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#eachdroppable"}},[e._v("#")]),e._v(" eachDroppable")]),e._v(" "),a("ul",[a("li",[e._v("Type: [undefined, Boolean, Function]\n"),a("ul",[a("li",[e._v("undefined: Inherit parent")]),e._v(" "),a("li",[e._v("Function: (currentPath: "),a("a",{attrs:{href:"#path"}},[e._v("Path")]),e._v(", tree: "),a("a",{attrs:{href:"#tree"}},[e._v("Tree")]),e._v(", store: "),a("a",{attrs:{href:"#store"}},[e._v("Store")]),e._v(") => "),a("a",{attrs:{href:"#isdroppable"}},[e._v("IsDroppable")])])])]),e._v(" "),a("li",[e._v("Detail: Whether a single node is droppable.")])]),e._v(" "),a("h3",{attrs:{id:"ondragstart"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ondragstart"}},[e._v("#")]),e._v(" ondragstart")]),e._v(" "),a("ul",[a("li",[e._v("Type: (tree: "),a("a",{attrs:{href:"#tree"}},[e._v("Tree")]),e._v(", store: "),a("a",{attrs:{href:"#store"}},[e._v("Store")]),e._v(") => Boolean")]),e._v(" "),a("li",[e._v("Detail: Hook, whether to prevent drag.")])]),e._v(" "),a("h3",{attrs:{id:"ondragend"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ondragend"}},[e._v("#")]),e._v(" ondragend")]),e._v(" "),a("ul",[a("li",[e._v("Type: (tree: "),a("a",{attrs:{href:"#tree"}},[e._v("Tree")]),e._v(", store: "),a("a",{attrs:{href:"#store"}},[e._v("Store")]),e._v(") => Boolean")]),e._v(" "),a("li",[e._v("Detail: Hook, whether to prevent the drag result.")])]),e._v(" "),a("h3",{attrs:{id:"unfoldwhendragover"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#unfoldwhendragover"}},[e._v("#")]),e._v(" unfoldWhenDragover")]),e._v(" "),a("ul",[a("li",[e._v("Type: Boolean, default: true")]),e._v(" "),a("li",[e._v("Detail: When dragging over a node, whether to open it if the node is folded.")])]),e._v(" "),a("h3",{attrs:{id:"unfoldwhendragoverdelay"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#unfoldwhendragoverdelay"}},[e._v("#")]),e._v(" unfoldWhenDragoverDelay")]),e._v(" "),a("ul",[a("li",[e._v("Type: Number, default: 30, unit: millisecond")]),e._v(" "),a("li",[e._v("Detail: When dragging over a folded node, wait some milliseconds before open it.")])]),e._v(" "),a("h3",{attrs:{id:"draggingnodepositionmode"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#draggingnodepositionmode"}},[e._v("#")]),e._v(" draggingNodePositionMode")]),e._v(" "),a("ul",[a("li",[e._v("Type: 'top_left_corner'|'mouse', default: 'top_left_corner'")]),e._v(" "),a("li",[e._v("Detail: How to locate the dragging node. top_left_corner: the top left corner of dragging node; mouse: mouse position")])]),e._v(" "),a("h3",{attrs:{id:"edgescroll"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#edgescroll"}},[e._v("#")]),e._v(" edgeScroll")]),e._v(" "),a("ul",[a("li",[e._v("Type: Boolean")]),e._v(" "),a("li",[e._v("Detail: Enable edge scroll.")])]),e._v(" "),a("h3",{attrs:{id:"edgescrolltriggermargin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#edgescrolltriggermargin"}},[e._v("#")]),e._v(" edgeScrollTriggerMargin")]),e._v(" "),a("ul",[a("li",[e._v("Type: Number, default: 50")]),e._v(" "),a("li",[e._v("Detail: The margin to trigger edge scroll.")])]),e._v(" "),a("h3",{attrs:{id:"edgescrollspeed"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#edgescrollspeed"}},[e._v("#")]),e._v(" edgeScrollSpeed")]),e._v(" "),a("ul",[a("li",[e._v("Type: Number, default: 0.35")]),e._v(" "),a("li",[e._v("Detail: The scroll speed.")])]),e._v(" "),a("h3",{attrs:{id:"edgescrolltriggermode"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#edgescrolltriggermode"}},[e._v("#")]),e._v(" edgeScrollTriggerMode")]),e._v(" "),a("ul",[a("li",[e._v("Type: 'top_left_corner'|'mouse', default: 'top_left_corner'")]),e._v(" "),a("li",[e._v("Detail: How to trigger edge scroll. top_left_corner: triggered by the top left corner; mouse: triggered by the mouse position.")])]),e._v(" "),a("h3",{attrs:{id:"edgescrollspecifiedcontainerx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#edgescrollspecifiedcontainerx"}},[e._v("#")]),e._v(" edgeScrollSpecifiedContainerX")]),e._v(" "),a("ul",[a("li",[e._v("Detail: HTMLElement | (store) => HTMLElement")]),e._v(" "),a("li",[e._v("Detail: Specify the parent element that triggers horizontal edge scrolling")])]),e._v(" "),a("h3",{attrs:{id:"edgescrollspecifiedcontainery"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#edgescrollspecifiedcontainery"}},[e._v("#")]),e._v(" edgeScrollSpecifiedContainerY")]),e._v(" "),a("ul",[a("li",[e._v("type: HTMLElement | (store) => HTMLElement")]),e._v(" "),a("li",[e._v("Detail: Specify the parent element that triggers vertical edge scrolling")])]),e._v(" "),a("h3",{attrs:{id:"preventtextselection"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#preventtextselection"}},[e._v("#")]),e._v(" preventTextSelection")]),e._v(" "),a("ul",[a("li",[e._v("type: type: Boolean, default: true")]),e._v(" "),a("li",[e._v("Detail: Prevent the text from being selected while dragging. It will execute "),a("code",[e._v("event.preventDefault()")]),e._v(" in some events.")])]),e._v(" "),a("h3",{attrs:{id:"crosstree"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#crosstree"}},[e._v("#")]),e._v(" crossTree "),a("Badge",{attrs:{text:"pro"}})],1),e._v(" "),a("ul",[a("li",[e._v("Type: [Boolean, Function], default: false\n"),a("ul",[a("li",[e._v("Function: (tree: "),a("a",{attrs:{href:"#tree"}},[e._v("Tree")]),e._v(", store: "),a("a",{attrs:{href:"#store"}},[e._v("Store")]),e._v(") => Boolean")])])]),e._v(" "),a("li",[e._v("Detail: Whether to allow cross trees. This must be enabled for both start tree and target tree.")])]),e._v(" "),a("h3",{attrs:{id:"maxlevel"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#maxlevel"}},[e._v("#")]),e._v(" maxLevel "),a("Badge",{attrs:{text:"pro"}})],1),e._v(" "),a("ul",[a("li",[e._v("Type: Number")]),e._v(" "),a("li",[e._v("Detail: The maximum number of levels allowed by the tree. It determines whether node can be placed when drag.")])]),e._v(" "),a("h3",{attrs:{id:"clonewhendrag"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#clonewhendrag"}},[e._v("#")]),e._v(" cloneWhenDrag "),a("Badge",{attrs:{text:"pro"}})],1),e._v(" "),a("ul",[a("li",[e._v("Type: Boolean, default: false")]),e._v(" "),a("li",[e._v("Detail: Clone node when drag.")])]),e._v(" "),a("h2",{attrs:{id:"methods-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#methods-4"}},[e._v("#")]),e._v(" methods")]),e._v(" "),a("h3",{attrs:{id:"isnodedraggable"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#isnodedraggable"}},[e._v("#")]),e._v(" isNodeDraggable")]),e._v(" "),a("ul",[a("li",[e._v("Type: (node: "),a("a",{attrs:{href:"#node"}},[e._v("Node")]),e._v(", path: "),a("a",{attrs:{href:"#path"}},[e._v("Path")]),e._v(") => Boolean")])]),e._v(" "),a("h3",{attrs:{id:"isnodedroppable"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#isnodedroppable"}},[e._v("#")]),e._v(" isNodeDroppable")]),e._v(" "),a("ul",[a("li",[e._v("Type: (node: "),a("a",{attrs:{href:"#node"}},[e._v("Node")]),e._v(", path: "),a("a",{attrs:{href:"#path"}},[e._v("Path")]),e._v(") => Boolean")])]),e._v(" "),a("h2",{attrs:{id:"node-special-properties-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#node-special-properties-3"}},[e._v("#")]),e._v(" Node Special Properties")]),e._v(" "),a("p",[e._v("Special properties of nodes in this plugin.")]),e._v(" "),a("h3",{attrs:{id:"draggable-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#draggable-2"}},[e._v("#")]),e._v(" $draggable")]),e._v(" "),a("ul",[a("li",[e._v("Type: [undefined, Boolean, Function]\n"),a("ul",[a("li",[e._v("undefined: Inherit parent")]),e._v(" "),a("li",[e._v("Function: (currentPath: "),a("a",{attrs:{href:"#path"}},[e._v("Path")]),e._v(", tree: "),a("a",{attrs:{href:"#tree"}},[e._v("Tree")]),e._v(", store: "),a("a",{attrs:{href:"#store"}},[e._v("Store")]),e._v(") => "),a("a",{attrs:{href:"#isdroppable"}},[e._v("IsDroppable")])])])]),e._v(" "),a("li",[e._v("Detail: Whether a single node is draggable.")])]),e._v(" "),a("h3",{attrs:{id:"droppable-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#droppable-2"}},[e._v("#")]),e._v(" $droppable")]),e._v(" "),a("ul",[a("li",[e._v("Type: [undefined, Boolean, Function]\n"),a("ul",[a("li",[e._v("undefined: Inherit parent")]),e._v(" "),a("li",[e._v("Function: (currentPath: "),a("a",{attrs:{href:"#path"}},[e._v("Path")]),e._v(", tree: "),a("a",{attrs:{href:"#tree"}},[e._v("Tree")]),e._v(", store: "),a("a",{attrs:{href:"#store"}},[e._v("Store")]),e._v(") => "),a("a",{attrs:{href:"#isdroppable"}},[e._v("IsDroppable")])])])]),e._v(" "),a("li",[e._v("Detail: Whether a single node is droppable.")])]),e._v(" "),a("h2",{attrs:{id:"events-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#events-2"}},[e._v("#")]),e._v(" events")]),e._v(" "),a("h3",{attrs:{id:"drag"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#drag"}},[e._v("#")]),e._v(" drag")]),e._v(" "),a("ul",[a("li",[e._v("Type: (store: "),a("a",{attrs:{href:"#store"}},[e._v("Store")]),e._v(")")])]),e._v(" "),a("h3",{attrs:{id:"before-drop"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#before-drop"}},[e._v("#")]),e._v(" before-drop")]),e._v(" "),a("ul",[a("li",[e._v("Type: (store: "),a("a",{attrs:{href:"#store"}},[e._v("Store")]),e._v(")")])]),e._v(" "),a("h3",{attrs:{id:"drop"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#drop"}},[e._v("#")]),e._v(" drop")]),e._v(" "),a("ul",[a("li",[e._v("Type: (store: "),a("a",{attrs:{href:"#store"}},[e._v("Store")]),e._v(")")])]),e._v(" "),a("h3",{attrs:{id:"input"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#input"}},[e._v("#")]),e._v(" input")]),e._v(" "),a("ul",[a("li",[e._v("Type: (treeData: "),a("a",{attrs:{href:"#treedata"}},[e._v("TreeData")]),e._v(")")])]),e._v(" "),a("h3",{attrs:{id:"change"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#change"}},[e._v("#")]),e._v(" change")]),e._v(" "),a("ul",[a("li",[e._v("Type: (store: "),a("a",{attrs:{href:"#store"}},[e._v("Store")]),e._v(")")])]),e._v(" "),a("h3",{attrs:{id:"after-placeholder-created"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#after-placeholder-created"}},[e._v("#")]),e._v(" after-placeholder-created")]),e._v(" "),a("ul",[a("li",[e._v("Type: (store: "),a("a",{attrs:{href:"#store"}},[e._v("Store")]),e._v(")")])]),e._v(" "),a("h3",{attrs:{id:"afterplaceholdercreated"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#afterplaceholdercreated"}},[e._v("#")]),e._v(" afterPlaceholderCreated")]),e._v(" "),a("ul",[a("li",[e._v("Type: (store: "),a("a",{attrs:{href:"#store"}},[e._v("Store")]),e._v(")")]),e._v(" "),a("li",[e._v("Detail: Alias of "),a("code",[e._v("after-placeholder-created")]),e._v(". Will be deprecated.")])]),e._v(" "),a("h3",{attrs:{id:"after-move"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#after-move"}},[e._v("#")]),e._v(" after-move")]),e._v(" "),a("ul",[a("li",[e._v("Type: (store: "),a("a",{attrs:{href:"#store"}},[e._v("Store")]),e._v(")")]),e._v(" "),a("li",[e._v("Detail: after each "),a("code",[e._v("mousemove")]),e._v(" or "),a("code",[e._v("touchmove")]),e._v(" event")])]),e._v(" "),a("h2",{attrs:{id:"utils"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#utils"}},[e._v("#")]),e._v(" Utils")]),e._v(" "),a("h3",{attrs:{id:"clonetreedata-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#clonetreedata-2"}},[e._v("#")]),e._v(" cloneTreeData")]),e._v(" "),a("ul",[a("li",[e._v("Type: (treeData: "),a("a",{attrs:{href:"#treedata"}},[e._v("TreeData")]),e._v(", options: Object) => "),a("a",{attrs:{href:"#treedata"}},[e._v("TreeData")]),e._v(" "),a("ul",[a("li",[e._v("options\n"),a("ul",[a("li",[e._v("afterNodeCreated: (newNode, {oldNode: node, index, parent, path})")])])])])])]),e._v(" "),a("h3",{attrs:{id:"walktreedata-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#walktreedata-2"}},[e._v("#")]),e._v(" walkTreeData")]),e._v(" "),a("ul",[a("li",[e._v("Type: (treeData: "),a("a",{attrs:{href:"#treedata"}},[e._v("TreeData")]),e._v(", handler: Function, options)\n"),a("ul",[a("li",[e._v("handler: (node, index, parent, path)\n"),a("ul",[a("li",[e._v("return false: stop walk")]),e._v(" "),a("li",[e._v("return 'skip children'")]),e._v(" "),a("li",[e._v("return 'skip siblings'")])])]),e._v(" "),a("li",[e._v("options\n"),a("ul",[a("li",[e._v("{Boolean} reverse")])])])])]),e._v(" "),a("li",[e._v("Detail: Iterate TreeData.")])]),e._v(" "),a("h3",{attrs:{id:"getpuretreedata-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getpuretreedata-2"}},[e._v("#")]),e._v(" getPureTreeData")]),e._v(" "),a("ul",[a("li",[e._v("Type: (treeData: "),a("a",{attrs:{href:"#treedata"}},[e._v("TreeData")]),e._v(") => "),a("a",{attrs:{href:"#puretreedata"}},[e._v("PureTreeData")])]),e._v(" "),a("li",[e._v("Type: (node: "),a("a",{attrs:{href:"#node"}},[e._v("Node")]),e._v(") => "),a("a",{attrs:{href:"#purenode"}},[e._v("PureNode")])])]),e._v(" "),a("h3",{attrs:{id:"foldall-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#foldall-2"}},[e._v("#")]),e._v(" foldAll")]),e._v(" "),a("ul",[a("li",[e._v("Type: (treeData: "),a("a",{attrs:{href:"#treedata"}},[e._v("TreeData")]),e._v(")")]),e._v(" "),a("li",[e._v("Detail: walk treeData and fold all. Make sure the data is reactive before do this.")])]),e._v(" "),a("h3",{attrs:{id:"unfoldall-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#unfoldall-2"}},[e._v("#")]),e._v(" unfoldAll")]),e._v(" "),a("ul",[a("li",[e._v("Type: (treeData: "),a("a",{attrs:{href:"#treedata"}},[e._v("TreeData")]),e._v(")")]),e._v(" "),a("li",[e._v("Detail: walk treeData and unfold all. Make sure the data is reactive before do this.")])]),e._v(" "),a("h2",{attrs:{id:"others"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#others"}},[e._v("#")]),e._v(" Others")]),e._v(" "),a("h2",{attrs:{id:"data-types"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#data-types"}},[e._v("#")]),e._v(" Data Types")]),e._v(" "),a("h3",{attrs:{id:"treedata-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#treedata-2"}},[e._v("#")]),e._v(" TreeData")]),e._v(" "),a("ul",[a("li",[e._v("Type: Array")]),e._v(" "),a("li",[e._v("Detail: Tree data.")]),e._v(" "),a("li",[e._v("Example: "),a("code",[e._v("[{text: 'node 1'}, {text: 'node 2', children: [{text: 'node 2-1'}]}]")])])]),e._v(" "),a("h3",{attrs:{id:"node"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#node"}},[e._v("#")]),e._v(" Node")]),e._v(" "),a("ul",[a("li",[e._v("Type: Object")]),e._v(" "),a("li",[e._v("Detail: Node data, "),a("code",[e._v("children")]),e._v(" is key of subtree, options key starts with "),a("code",[e._v("$")]),e._v(".")]),e._v(" "),a("li",[e._v("Example: "),a("code",[e._v("{text: 'node 2', children: [{text: 'node 2-1'}, $draggable: false]}")])])]),e._v(" "),a("h3",{attrs:{id:"puretreedata"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#puretreedata"}},[e._v("#")]),e._v(" PureTreeData")]),e._v(" "),a("ul",[a("li",[e._v("Type: Array")]),e._v(" "),a("li",[e._v("Detail: Pure tree data, without key starts with "),a("code",[e._v("$")]),e._v(".")])]),e._v(" "),a("h3",{attrs:{id:"purenode"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#purenode"}},[e._v("#")]),e._v(" PureNode")]),e._v(" "),a("ul",[a("li",[e._v("Type: Object")]),e._v(" "),a("li",[e._v("Detail: Pure node data, without key starts with "),a("code",[e._v("$")]),e._v(".")])]),e._v(" "),a("h3",{attrs:{id:"path"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#path"}},[e._v("#")]),e._v(" Path")]),e._v(" "),a("ul",[a("li",[e._v("Type: Array")]),e._v(" "),a("li",[e._v("Detail: Node position in TreeData. Starting from the highest second level, the serial number of each level in the parent.")]),e._v(" "),a("li",[e._v("Example: "),a("code",[e._v("[{text: 'node 1'}, {text: 'node 2', children: [{text: 'node 3'}]}]")]),e._v(", path of 'node 3' is [1, 0]")])]),e._v(" "),a("h3",{attrs:{id:"tree"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tree"}},[e._v("#")]),e._v(" Tree")]),e._v(" "),a("ul",[a("li",[e._v("Detail: Vue instance(vm) of Tree.")])]),e._v(" "),a("h3",{attrs:{id:"store"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#store"}},[e._v("#")]),e._v(" Store")]),e._v(" "),a("ul",[a("li",[e._v("Type: Object\n"),a("ul",[a("li",[e._v("{HTMLElement} listenerElement: Elements bound to event listeners")]),e._v(" "),a("li",[e._v("{HTMLElement} directTriggerElement: The element triggered event directly.")]),e._v(" "),a("li",[e._v("{HTMLElement} triggerElement: The element allowed to trigger event. Maybe the parent of directTriggerElement.")]),e._v(" "),a("li",[e._v("{HTMLElement} movedElement: the moving el")]),e._v(" "),a("li",[e._v("{HTMLElement} movedOrClonedElement: the original moving el, used when clone")]),e._v(" "),a("li",[e._v("{Object: {x, y}} mouse: the mouse position, relative to viewport.")]),e._v(" "),a("li",[e._v("{Number} movedCount: the moved times")]),e._v(" "),a("li",[e._v("{Event} startEvent: mousedown or touchstart event")]),e._v(" "),a("li",[e._v("{Event} endEvent: mouseup or touchend event")]),e._v(" "),a("li",[e._v("{HTMLElement} startTreeEl")]),e._v(" "),a("li",[e._v("{vm} startTree")]),e._v(" "),a("li",[e._v("{"),a("a",{attrs:{href:"#path"}},[e._v("Path")]),e._v("} startPath")]),e._v(" "),a("li",[e._v("{HTMLElement} dragBranchEl")]),e._v(" "),a("li",[e._v("{"),a("a",{attrs:{href:"#node"}},[e._v("Node")]),e._v("} dragNode")]),e._v(" "),a("li",[e._v("{HTMLElement} targetTreeEl")]),e._v(" "),a("li",[e._v("{vm} targetTree")]),e._v(" "),a("li",[e._v("{"),a("a",{attrs:{href:"#path"}},[e._v("Path")]),e._v("} targetPath")]),e._v(" "),a("li",[e._v("{Boolean} targetPathNotEqualToStartPath")]),e._v(" "),a("li",[e._v("{HTMLElement} placeholder")]),e._v(" "),a("li",[e._v("{Boolean} pathChangePrevented: if path change be prevented by hooks.")]),e._v(" "),a("li",[e._v("{Boolean} pathChanged: Whether the path changes in the end.")])])]),e._v(" "),a("li",[e._v("Detail: Related data during this dragging process. Created when drag start, destroyed when drag end. Also available through "),a("code",[e._v("tree.treesStore.store")]),e._v(".")])]),e._v(" "),a("h3",{attrs:{id:"isdraggable"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#isdraggable"}},[e._v("#")]),e._v(" IsDraggable")]),e._v(" "),a("ul",[a("li",[e._v("Type: [Boolean, undefined]\n"),a("ul",[a("li",[e._v("undefined: Inherit parent")])])]),e._v(" "),a("li",[e._v("Detail: Whether a single node is draggable.")])]),e._v(" "),a("h3",{attrs:{id:"isdroppable"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#isdroppable"}},[e._v("#")]),e._v(" IsDroppable")]),e._v(" "),a("ul",[a("li",[e._v("Type: [Boolean, undefined]\n"),a("ul",[a("li",[e._v("undefined: Inherit parent")])])]),e._v(" "),a("li",[e._v("Detail: Whether a single node is droppable.")])]),e._v(" "),a("h3",{attrs:{id:"jsx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jsx"}},[e._v("#")]),e._v(" JSX")]),e._v(" "),a("ul",[a("li",[e._v("Detail: "),a("a",{attrs:{href:"https://vuejs.org/v2/guide/render-function.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Vue JSX"),a("OutboundLink")],1),e._v(".")])]),e._v(" "),a("h2",{attrs:{id:"html-elements"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#html-elements"}},[e._v("#")]),e._v(" HTML Elements")]),e._v(" "),a("h3",{attrs:{id:"tree-children"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tree-children"}},[e._v("#")]),e._v(" tree-children")]),e._v(" "),a("ul",[a("li",[e._v("Detail: List. The top has class "),a("code",[e._v("tree-root")]),e._v(".")])]),e._v(" "),a("h3",{attrs:{id:"tree-branch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tree-branch"}},[e._v("#")]),e._v(" tree-branch")]),e._v(" "),a("ul",[a("li",[e._v("Detail: The child of tree-children. Branch element, including tree-node and tree-children.")])]),e._v(" "),a("h3",{attrs:{id:"tree-node-back"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tree-node-back"}},[e._v("#")]),e._v(" tree-node-back")]),e._v(" "),a("ul",[a("li",[e._v("Detail: The child of tree-branch. Node back element. The main role is to serve as the full-width background element of the node. You can set the full-width background color when hover through css. It has a padding-left that automatically calculates the indentation of the node.")])]),e._v(" "),a("h3",{attrs:{id:"tree-node"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tree-node"}},[e._v("#")]),e._v(" tree-node")]),e._v(" "),a("ul",[a("li",[e._v("Detail: The child of tree-node-back. Node element, including default slot.")])])])}),[],!1,null,null,null);t.default=s.exports}}]);